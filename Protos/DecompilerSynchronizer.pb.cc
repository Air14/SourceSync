// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DecompilerSynchronizer.proto

#include "DecompilerSynchronizer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR EmptyRequestReply::EmptyRequestReply(
    ::_pbi::ConstantInitialized) {}
struct EmptyRequestReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyRequestReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyRequestReplyDefaultTypeInternal() {}
  union {
    EmptyRequestReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyRequestReplyDefaultTypeInternal _EmptyRequestReply_default_instance_;
PROTOBUF_CONSTEXPR DecompiledModuleNameReply::DecompiledModuleNameReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.modulename_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DecompiledModuleNameReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DecompiledModuleNameReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DecompiledModuleNameReplyDefaultTypeInternal() {}
  union {
    DecompiledModuleNameReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DecompiledModuleNameReplyDefaultTypeInternal _DecompiledModuleNameReply_default_instance_;
PROTOBUF_CONSTEXPR FunctionBoundaries::FunctionBoundaries(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.startoffunctionrva_)*/uint64_t{0u}
  , /*decltype(_impl_.endoffunctionrva_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FunctionBoundariesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FunctionBoundariesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FunctionBoundariesDefaultTypeInternal() {}
  union {
    FunctionBoundaries _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FunctionBoundariesDefaultTypeInternal _FunctionBoundaries_default_instance_;
PROTOBUF_CONSTEXPR GeneratePdbForCallstackRequest::GeneratePdbForCallstackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.functionsrva_)*/{}
  , /*decltype(_impl_._functionsrva_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GeneratePdbForCallstackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratePdbForCallstackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratePdbForCallstackRequestDefaultTypeInternal() {}
  union {
    GeneratePdbForCallstackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratePdbForCallstackRequestDefaultTypeInternal _GeneratePdbForCallstackRequest_default_instance_;
PROTOBUF_CONSTEXPR GeneratePdbForCallstackReply::GeneratePdbForCallstackReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.functionsboundaries_)*/{}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GeneratePdbForCallstackReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GeneratePdbForCallstackReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GeneratePdbForCallstackReplyDefaultTypeInternal() {}
  union {
    GeneratePdbForCallstackReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GeneratePdbForCallstackReplyDefaultTypeInternal _GeneratePdbForCallstackReply_default_instance_;
PROTOBUF_CONSTEXPR GetPdbPathReply::GetPdbPathReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pdbpath_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPdbPathReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPdbPathReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPdbPathReplyDefaultTypeInternal() {}
  union {
    GetPdbPathReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPdbPathReplyDefaultTypeInternal _GetPdbPathReply_default_instance_;
PROTOBUF_CONSTEXPR ShouldUpdateSymbolsReply::ShouldUpdateSymbolsReply(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShouldUpdateSymbolsReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShouldUpdateSymbolsReplyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShouldUpdateSymbolsReplyDefaultTypeInternal() {}
  union {
    ShouldUpdateSymbolsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShouldUpdateSymbolsReplyDefaultTypeInternal _ShouldUpdateSymbolsReply_default_instance_;
static ::_pb::Metadata file_level_metadata_DecompilerSynchronizer_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_DecompilerSynchronizer_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_DecompilerSynchronizer_2eproto = nullptr;

const uint32_t TableStruct_DecompilerSynchronizer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EmptyRequestReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DecompiledModuleNameReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DecompiledModuleNameReply, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::DecompiledModuleNameReply, _impl_.modulename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::FunctionBoundaries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::FunctionBoundaries, _impl_.startoffunctionrva_),
  PROTOBUF_FIELD_OFFSET(::FunctionBoundaries, _impl_.endoffunctionrva_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GeneratePdbForCallstackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GeneratePdbForCallstackRequest, _impl_.functionsrva_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GeneratePdbForCallstackReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GeneratePdbForCallstackReply, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::GeneratePdbForCallstackReply, _impl_.functionsboundaries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::GetPdbPathReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::GetPdbPathReply, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::GetPdbPathReply, _impl_.pdbpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ShouldUpdateSymbolsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ShouldUpdateSymbolsReply, _impl_.status_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::EmptyRequestReply)},
  { 6, -1, -1, sizeof(::DecompiledModuleNameReply)},
  { 14, -1, -1, sizeof(::FunctionBoundaries)},
  { 22, -1, -1, sizeof(::GeneratePdbForCallstackRequest)},
  { 29, -1, -1, sizeof(::GeneratePdbForCallstackReply)},
  { 37, -1, -1, sizeof(::GetPdbPathReply)},
  { 45, -1, -1, sizeof(::ShouldUpdateSymbolsReply)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_EmptyRequestReply_default_instance_._instance,
  &::_DecompiledModuleNameReply_default_instance_._instance,
  &::_FunctionBoundaries_default_instance_._instance,
  &::_GeneratePdbForCallstackRequest_default_instance_._instance,
  &::_GeneratePdbForCallstackReply_default_instance_._instance,
  &::_GetPdbPathReply_default_instance_._instance,
  &::_ShouldUpdateSymbolsReply_default_instance_._instance,
};

const char descriptor_table_protodef_DecompilerSynchronizer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034DecompilerSynchronizer.proto\"\023\n\021EmptyR"
  "equestReply\"\?\n\031DecompiledModuleNameReply"
  "\022\016\n\006Status\030\001 \001(\010\022\022\n\nModuleName\030\002 \001(\t\"J\n\022"
  "FunctionBoundaries\022\032\n\022StartOfFunctionRva"
  "\030\001 \001(\004\022\030\n\020EndOfFunctionRva\030\002 \001(\004\"6\n\036Gene"
  "ratePdbForCallstackRequest\022\024\n\014FunctionsR"
  "va\030\001 \003(\004\"`\n\034GeneratePdbForCallstackReply"
  "\022\016\n\006Status\030\001 \001(\010\0220\n\023FunctionsBoundaries\030"
  "\002 \003(\0132\023.FunctionBoundaries\"2\n\017GetPdbPath"
  "Reply\022\016\n\006Status\030\001 \001(\010\022\017\n\007PdbPath\030\002 \001(\t\"*"
  "\n\030ShouldUpdateSymbolsReply\022\016\n\006Status\030\001 \001"
  "(\0102\370\002\n\026DecompilerSynchronizer\0226\n\nInitial"
  "ize\022\022.EmptyRequestReply\032\022.EmptyRequestRe"
  "ply\"\000\022K\n\027GetDecompiledModuleName\022\022.Empty"
  "RequestReply\032\032.DecompiledModuleNameReply"
  "\"\000\022[\n\027GeneratePdbForCallstack\022\037.Generate"
  "PdbForCallstackRequest\032\035.GeneratePdbForC"
  "allstackReply\"\000\0224\n\nGetPdbPath\022\022.EmptyReq"
  "uestReply\032\020.GetPdbPathReply\"\000\022F\n\023ShouldU"
  "pdateSymbols\022\022.EmptyRequestReply\032\031.Shoul"
  "dUpdateSymbolsReply\"\000b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_DecompilerSynchronizer_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_DecompilerSynchronizer_2eproto = {
    false, false, 829, descriptor_table_protodef_DecompilerSynchronizer_2eproto,
    "DecompilerSynchronizer.proto",
    &descriptor_table_DecompilerSynchronizer_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_DecompilerSynchronizer_2eproto::offsets,
    file_level_metadata_DecompilerSynchronizer_2eproto, file_level_enum_descriptors_DecompilerSynchronizer_2eproto,
    file_level_service_descriptors_DecompilerSynchronizer_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_DecompilerSynchronizer_2eproto_getter() {
  return &descriptor_table_DecompilerSynchronizer_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_DecompilerSynchronizer_2eproto(&descriptor_table_DecompilerSynchronizer_2eproto);

// ===================================================================

class EmptyRequestReply::_Internal {
 public:
};

EmptyRequestReply::EmptyRequestReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:EmptyRequestReply)
}
EmptyRequestReply::EmptyRequestReply(const EmptyRequestReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  EmptyRequestReply* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:EmptyRequestReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyRequestReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyRequestReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EmptyRequestReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[0]);
}

// ===================================================================

class DecompiledModuleNameReply::_Internal {
 public:
};

DecompiledModuleNameReply::DecompiledModuleNameReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DecompiledModuleNameReply)
}
DecompiledModuleNameReply::DecompiledModuleNameReply(const DecompiledModuleNameReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DecompiledModuleNameReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_modulename().empty()) {
    _this->_impl_.modulename_.Set(from._internal_modulename(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:DecompiledModuleNameReply)
}

inline void DecompiledModuleNameReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.modulename_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.modulename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.modulename_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DecompiledModuleNameReply::~DecompiledModuleNameReply() {
  // @@protoc_insertion_point(destructor:DecompiledModuleNameReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DecompiledModuleNameReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.modulename_.Destroy();
}

void DecompiledModuleNameReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DecompiledModuleNameReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DecompiledModuleNameReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.modulename_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DecompiledModuleNameReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ModuleName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_modulename();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "DecompiledModuleNameReply.ModuleName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DecompiledModuleNameReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DecompiledModuleNameReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string ModuleName = 2;
  if (!this->_internal_modulename().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_modulename().data(), static_cast<int>(this->_internal_modulename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "DecompiledModuleNameReply.ModuleName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_modulename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DecompiledModuleNameReply)
  return target;
}

size_t DecompiledModuleNameReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DecompiledModuleNameReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ModuleName = 2;
  if (!this->_internal_modulename().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_modulename());
  }

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DecompiledModuleNameReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DecompiledModuleNameReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DecompiledModuleNameReply::GetClassData() const { return &_class_data_; }


void DecompiledModuleNameReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DecompiledModuleNameReply*>(&to_msg);
  auto& from = static_cast<const DecompiledModuleNameReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DecompiledModuleNameReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_modulename().empty()) {
    _this->_internal_set_modulename(from._internal_modulename());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DecompiledModuleNameReply::CopyFrom(const DecompiledModuleNameReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DecompiledModuleNameReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecompiledModuleNameReply::IsInitialized() const {
  return true;
}

void DecompiledModuleNameReply::InternalSwap(DecompiledModuleNameReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.modulename_, lhs_arena,
      &other->_impl_.modulename_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DecompiledModuleNameReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[1]);
}

// ===================================================================

class FunctionBoundaries::_Internal {
 public:
};

FunctionBoundaries::FunctionBoundaries(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:FunctionBoundaries)
}
FunctionBoundaries::FunctionBoundaries(const FunctionBoundaries& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FunctionBoundaries* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.startoffunctionrva_){}
    , decltype(_impl_.endoffunctionrva_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.startoffunctionrva_, &from._impl_.startoffunctionrva_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.endoffunctionrva_) -
    reinterpret_cast<char*>(&_impl_.startoffunctionrva_)) + sizeof(_impl_.endoffunctionrva_));
  // @@protoc_insertion_point(copy_constructor:FunctionBoundaries)
}

inline void FunctionBoundaries::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.startoffunctionrva_){uint64_t{0u}}
    , decltype(_impl_.endoffunctionrva_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FunctionBoundaries::~FunctionBoundaries() {
  // @@protoc_insertion_point(destructor:FunctionBoundaries)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FunctionBoundaries::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FunctionBoundaries::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FunctionBoundaries::Clear() {
// @@protoc_insertion_point(message_clear_start:FunctionBoundaries)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.startoffunctionrva_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.endoffunctionrva_) -
      reinterpret_cast<char*>(&_impl_.startoffunctionrva_)) + sizeof(_impl_.endoffunctionrva_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FunctionBoundaries::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 StartOfFunctionRva = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.startoffunctionrva_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 EndOfFunctionRva = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.endoffunctionrva_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FunctionBoundaries::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FunctionBoundaries)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 StartOfFunctionRva = 1;
  if (this->_internal_startoffunctionrva() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_startoffunctionrva(), target);
  }

  // uint64 EndOfFunctionRva = 2;
  if (this->_internal_endoffunctionrva() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_endoffunctionrva(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FunctionBoundaries)
  return target;
}

size_t FunctionBoundaries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FunctionBoundaries)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 StartOfFunctionRva = 1;
  if (this->_internal_startoffunctionrva() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_startoffunctionrva());
  }

  // uint64 EndOfFunctionRva = 2;
  if (this->_internal_endoffunctionrva() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_endoffunctionrva());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FunctionBoundaries::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FunctionBoundaries::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FunctionBoundaries::GetClassData() const { return &_class_data_; }


void FunctionBoundaries::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FunctionBoundaries*>(&to_msg);
  auto& from = static_cast<const FunctionBoundaries&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:FunctionBoundaries)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_startoffunctionrva() != 0) {
    _this->_internal_set_startoffunctionrva(from._internal_startoffunctionrva());
  }
  if (from._internal_endoffunctionrva() != 0) {
    _this->_internal_set_endoffunctionrva(from._internal_endoffunctionrva());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FunctionBoundaries::CopyFrom(const FunctionBoundaries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FunctionBoundaries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionBoundaries::IsInitialized() const {
  return true;
}

void FunctionBoundaries::InternalSwap(FunctionBoundaries* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FunctionBoundaries, _impl_.endoffunctionrva_)
      + sizeof(FunctionBoundaries::_impl_.endoffunctionrva_)
      - PROTOBUF_FIELD_OFFSET(FunctionBoundaries, _impl_.startoffunctionrva_)>(
          reinterpret_cast<char*>(&_impl_.startoffunctionrva_),
          reinterpret_cast<char*>(&other->_impl_.startoffunctionrva_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FunctionBoundaries::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[2]);
}

// ===================================================================

class GeneratePdbForCallstackRequest::_Internal {
 public:
};

GeneratePdbForCallstackRequest::GeneratePdbForCallstackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GeneratePdbForCallstackRequest)
}
GeneratePdbForCallstackRequest::GeneratePdbForCallstackRequest(const GeneratePdbForCallstackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GeneratePdbForCallstackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.functionsrva_){from._impl_.functionsrva_}
    , /*decltype(_impl_._functionsrva_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GeneratePdbForCallstackRequest)
}

inline void GeneratePdbForCallstackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.functionsrva_){arena}
    , /*decltype(_impl_._functionsrva_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GeneratePdbForCallstackRequest::~GeneratePdbForCallstackRequest() {
  // @@protoc_insertion_point(destructor:GeneratePdbForCallstackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GeneratePdbForCallstackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.functionsrva_.~RepeatedField();
}

void GeneratePdbForCallstackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GeneratePdbForCallstackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:GeneratePdbForCallstackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.functionsrva_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneratePdbForCallstackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint64 FunctionsRva = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_functionsrva(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_functionsrva(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GeneratePdbForCallstackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GeneratePdbForCallstackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 FunctionsRva = 1;
  {
    int byte_size = _impl_._functionsrva_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_functionsrva(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GeneratePdbForCallstackRequest)
  return target;
}

size_t GeneratePdbForCallstackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GeneratePdbForCallstackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 FunctionsRva = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.functionsrva_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._functionsrva_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GeneratePdbForCallstackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GeneratePdbForCallstackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GeneratePdbForCallstackRequest::GetClassData() const { return &_class_data_; }


void GeneratePdbForCallstackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GeneratePdbForCallstackRequest*>(&to_msg);
  auto& from = static_cast<const GeneratePdbForCallstackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GeneratePdbForCallstackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.functionsrva_.MergeFrom(from._impl_.functionsrva_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratePdbForCallstackRequest::CopyFrom(const GeneratePdbForCallstackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GeneratePdbForCallstackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneratePdbForCallstackRequest::IsInitialized() const {
  return true;
}

void GeneratePdbForCallstackRequest::InternalSwap(GeneratePdbForCallstackRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.functionsrva_.InternalSwap(&other->_impl_.functionsrva_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneratePdbForCallstackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[3]);
}

// ===================================================================

class GeneratePdbForCallstackReply::_Internal {
 public:
};

GeneratePdbForCallstackReply::GeneratePdbForCallstackReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GeneratePdbForCallstackReply)
}
GeneratePdbForCallstackReply::GeneratePdbForCallstackReply(const GeneratePdbForCallstackReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GeneratePdbForCallstackReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.functionsboundaries_){from._impl_.functionsboundaries_}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:GeneratePdbForCallstackReply)
}

inline void GeneratePdbForCallstackReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.functionsboundaries_){arena}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GeneratePdbForCallstackReply::~GeneratePdbForCallstackReply() {
  // @@protoc_insertion_point(destructor:GeneratePdbForCallstackReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GeneratePdbForCallstackReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.functionsboundaries_.~RepeatedPtrField();
}

void GeneratePdbForCallstackReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GeneratePdbForCallstackReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GeneratePdbForCallstackReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.functionsboundaries_.Clear();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GeneratePdbForCallstackReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .FunctionBoundaries FunctionsBoundaries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_functionsboundaries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GeneratePdbForCallstackReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GeneratePdbForCallstackReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // repeated .FunctionBoundaries FunctionsBoundaries = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_functionsboundaries_size()); i < n; i++) {
    const auto& repfield = this->_internal_functionsboundaries(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GeneratePdbForCallstackReply)
  return target;
}

size_t GeneratePdbForCallstackReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GeneratePdbForCallstackReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FunctionBoundaries FunctionsBoundaries = 2;
  total_size += 1UL * this->_internal_functionsboundaries_size();
  for (const auto& msg : this->_impl_.functionsboundaries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GeneratePdbForCallstackReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GeneratePdbForCallstackReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GeneratePdbForCallstackReply::GetClassData() const { return &_class_data_; }


void GeneratePdbForCallstackReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GeneratePdbForCallstackReply*>(&to_msg);
  auto& from = static_cast<const GeneratePdbForCallstackReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GeneratePdbForCallstackReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.functionsboundaries_.MergeFrom(from._impl_.functionsboundaries_);
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GeneratePdbForCallstackReply::CopyFrom(const GeneratePdbForCallstackReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GeneratePdbForCallstackReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneratePdbForCallstackReply::IsInitialized() const {
  return true;
}

void GeneratePdbForCallstackReply::InternalSwap(GeneratePdbForCallstackReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.functionsboundaries_.InternalSwap(&other->_impl_.functionsboundaries_);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GeneratePdbForCallstackReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[4]);
}

// ===================================================================

class GetPdbPathReply::_Internal {
 public:
};

GetPdbPathReply::GetPdbPathReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:GetPdbPathReply)
}
GetPdbPathReply::GetPdbPathReply(const GetPdbPathReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPdbPathReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pdbpath_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.pdbpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pdbpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pdbpath().empty()) {
    _this->_impl_.pdbpath_.Set(from._internal_pdbpath(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:GetPdbPathReply)
}

inline void GetPdbPathReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pdbpath_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.pdbpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pdbpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetPdbPathReply::~GetPdbPathReply() {
  // @@protoc_insertion_point(destructor:GetPdbPathReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPdbPathReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pdbpath_.Destroy();
}

void GetPdbPathReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPdbPathReply::Clear() {
// @@protoc_insertion_point(message_clear_start:GetPdbPathReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pdbpath_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPdbPathReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string PdbPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pdbpath();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "GetPdbPathReply.PdbPath"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPdbPathReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetPdbPathReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string PdbPath = 2;
  if (!this->_internal_pdbpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pdbpath().data(), static_cast<int>(this->_internal_pdbpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "GetPdbPathReply.PdbPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pdbpath(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetPdbPathReply)
  return target;
}

size_t GetPdbPathReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetPdbPathReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string PdbPath = 2;
  if (!this->_internal_pdbpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pdbpath());
  }

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPdbPathReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPdbPathReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPdbPathReply::GetClassData() const { return &_class_data_; }


void GetPdbPathReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPdbPathReply*>(&to_msg);
  auto& from = static_cast<const GetPdbPathReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetPdbPathReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pdbpath().empty()) {
    _this->_internal_set_pdbpath(from._internal_pdbpath());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPdbPathReply::CopyFrom(const GetPdbPathReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetPdbPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPdbPathReply::IsInitialized() const {
  return true;
}

void GetPdbPathReply::InternalSwap(GetPdbPathReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pdbpath_, lhs_arena,
      &other->_impl_.pdbpath_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPdbPathReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[5]);
}

// ===================================================================

class ShouldUpdateSymbolsReply::_Internal {
 public:
};

ShouldUpdateSymbolsReply::ShouldUpdateSymbolsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ShouldUpdateSymbolsReply)
}
ShouldUpdateSymbolsReply::ShouldUpdateSymbolsReply(const ShouldUpdateSymbolsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShouldUpdateSymbolsReply* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:ShouldUpdateSymbolsReply)
}

inline void ShouldUpdateSymbolsReply::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ShouldUpdateSymbolsReply::~ShouldUpdateSymbolsReply() {
  // @@protoc_insertion_point(destructor:ShouldUpdateSymbolsReply)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShouldUpdateSymbolsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ShouldUpdateSymbolsReply::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShouldUpdateSymbolsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ShouldUpdateSymbolsReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShouldUpdateSymbolsReply::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShouldUpdateSymbolsReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ShouldUpdateSymbolsReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ShouldUpdateSymbolsReply)
  return target;
}

size_t ShouldUpdateSymbolsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ShouldUpdateSymbolsReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShouldUpdateSymbolsReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShouldUpdateSymbolsReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShouldUpdateSymbolsReply::GetClassData() const { return &_class_data_; }


void ShouldUpdateSymbolsReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShouldUpdateSymbolsReply*>(&to_msg);
  auto& from = static_cast<const ShouldUpdateSymbolsReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ShouldUpdateSymbolsReply)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShouldUpdateSymbolsReply::CopyFrom(const ShouldUpdateSymbolsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ShouldUpdateSymbolsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShouldUpdateSymbolsReply::IsInitialized() const {
  return true;
}

void ShouldUpdateSymbolsReply::InternalSwap(ShouldUpdateSymbolsReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShouldUpdateSymbolsReply::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DecompilerSynchronizer_2eproto_getter, &descriptor_table_DecompilerSynchronizer_2eproto_once,
      file_level_metadata_DecompilerSynchronizer_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::EmptyRequestReply*
Arena::CreateMaybeMessage< ::EmptyRequestReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EmptyRequestReply >(arena);
}
template<> PROTOBUF_NOINLINE ::DecompiledModuleNameReply*
Arena::CreateMaybeMessage< ::DecompiledModuleNameReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DecompiledModuleNameReply >(arena);
}
template<> PROTOBUF_NOINLINE ::FunctionBoundaries*
Arena::CreateMaybeMessage< ::FunctionBoundaries >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FunctionBoundaries >(arena);
}
template<> PROTOBUF_NOINLINE ::GeneratePdbForCallstackRequest*
Arena::CreateMaybeMessage< ::GeneratePdbForCallstackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GeneratePdbForCallstackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::GeneratePdbForCallstackReply*
Arena::CreateMaybeMessage< ::GeneratePdbForCallstackReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GeneratePdbForCallstackReply >(arena);
}
template<> PROTOBUF_NOINLINE ::GetPdbPathReply*
Arena::CreateMaybeMessage< ::GetPdbPathReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::GetPdbPathReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ShouldUpdateSymbolsReply*
Arena::CreateMaybeMessage< ::ShouldUpdateSymbolsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ShouldUpdateSymbolsReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
